class Stack is
    field size:Integer is 0
    field list:List[Integer] is List()
    
    this() is end
    
    method Push(element : Integer) is
        list = list.Append(element)
        size.Plus(1)
    end
    
    method Pop() : Integer is
        size.Minus(1)
        let element = list.head()
        list = list.head()
        return element
    end
    
    method Peek() : Integer is
        return list.head()
    end
end

class Program is
    this() is
        let array:Array[Integer] = Array()
        array.Set(0, 3)
        array.Set(1, 1)
        array.Set(2, 2)
    
        let stack = Stack()
        let i = 0
        while i.Less(v) loop
            stack.Push(array.Get(i))
            i = i.Plus(1)
        end
        
        i = 0
        while i.Less(v) loop
            let expectedElement = array.Get(i)
            
            if stack.Peek().Equal(expectedElement).Not() then 
                System.Console.WriteLine("Wrong Answer") 
            end
            
            if stack.Pop().Equal(expectedElement).Not() then 
                System.Console.WriteLine("Wrong Answer") 
            end
            
            if stack.size.Equal(array.Length.Minus(i.Add(1))).Not() then 
                System.Console.WriteLine("Wrong Answer") 
            end
            
            i = i.Plus(1)
        end
    end
end
